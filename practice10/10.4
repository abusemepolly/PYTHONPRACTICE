import numpy as np
import matplotlib.pyplot as plt
from matplotlib.widgets import Slider

# Функция для генерации волны
def generate_wave(amp, freq, t):
    return amp * np.sin(2 * np.pi * freq * t)

# Функция для обновления графика
def update(val):
    line1.set_ydata(generate_wave(slider_amp1.val, slider_freq1.val, t))
    line2.set_ydata(generate_wave(slider_amp2.val, slider_freq2.val, t))
    line_sum.set_ydata(generate_wave(slider_amp1.val, slider_freq1.val, t) +
                       generate_wave(slider_amp2.val, slider_freq2.val, t))
    fig.canvas.draw_idle()

# Создание фигуры и осей
fig, ax = plt.subplots()
plt.subplots_adjust(left=0.1, bottom=0.35)

# Параметры для генерации волн
t = np.linspace(0, 10, 1000)  # временной ряд
amp1, freq1 = 1.0, 1.0  # Начальные параметры волны 1
amp2, freq2 = 2.0, 2.0  # Начальные параметры волны 2

# Отображение начальных волн и их суммы
line1, = ax.plot(t, generate_wave(amp1, freq1, t), label='Волна 1')
line2, = ax.plot(t, generate_wave(amp2, freq2, t), label='Волна 2')
line_sum, = ax.plot(t, generate_wave(amp1, freq1, t) + generate_wave(amp2, freq2, t), label='Сумма волн')

# Создание слайдеров для амплитуды и частоты
axcolor = 'lightgoldenrodyellow'
ax_amp1 = plt.axes([0.1, 0.25, 0.65, 0.03], facecolor=axcolor)
slider_amp1 = Slider(ax_amp1, 'Амплитуда 1', 0.1, 5.0, valinit=amp1)
ax_freq1 = plt.axes([0.1, 0.20, 0.65, 0.03], facecolor=axcolor)
slider_freq1 = Slider(ax_freq1, 'Частота 1', 0.1, 10.0, valinit=freq1)

ax_amp2 = plt.axes([0.1, 0.15, 0.65, 0.03], facecolor=axcolor)
slider_amp2 = Slider(ax_amp2, 'Амплитуда 2', 0.1, 5.0, valinit=amp2)
ax_freq2 = plt.axes([0.1, 0.10, 0.65, 0.03], facecolor=axcolor)
slider_freq2 = Slider(ax_freq2, 'Частота 2', 0.1, 10.0, valinit=freq2)

# Назначение функции обновления для слайдеров
slider_amp1.on_changed(update)
slider_freq1.on_changed(update)
slider_amp2.on_changed(update)
slider_freq2.on_changed(update)

# Добавление легенды
ax.legend()

plt.show()
